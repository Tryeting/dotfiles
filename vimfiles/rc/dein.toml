#############################
#         REQUIRED!         #
#############################
# {{{
[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'roxma/nvim-yarp'
if = '''!has('nvim')'''

[[plugins]]
repo = 'roxma/vim-hug-neovim-rpc'
if = '''!has('nvim')'''
# }}}

#############################
#    GIT RELATED PLUGINS    #
#############################
# {{{
[[plugins]]
repo = 'tpope/vim-fugitive'
hook_add = '''
    nmap <Space>gs :Gstatus<CR>
    nmap <Space>gw :Gwrite<CR>
    nmap <Space>gc :Gcommit<CR>
    nmap <Space>gr :Gread<CR>
'''
# }}}

#############################
#    APPEARANCE PLUGINS     #
#############################
# {{{
[[plugins]]
repo = 'vim-airline/vim-airline'
hook_add = '''
    let g:airline#extensions#tabline#enabled = 1
    let g:airline#extensions#tabline#left_sep = ' '
    let g:airline#extensions#tabline#left_alt_sep = '|'
    let g:airline_theme = 'powerlineish'
'''

[[plugins]]
repo = 'vim-airline/vim-airline-themes'

[[plugins]]
repo = 'Yggdroot/indentLine'
hook_add = '''
    let g:indentLine_color_term = 239
'''

[[plugins]]
repo = 'ryanoasis/vim-devicons'
# }}}

#############################
#    SHOUGO-WARE PLUGINS    #
#############################
# {{{
[[plugins]]
repo = 'Shougo/vimproc.vim'
build = 'make'

[[plugins]]
repo = 'Shougo/neosnippet'
depends = ['neosnippet-snippets']
hook_add = '''
    imap <C-k> <Plug>(neosnippet_expand_or_jump)
    smap <C-k> <Plug>(neosnippet_expand_or_jump)
    xmap <C-k> <Plug>(neosnippet_expand_target)
    if has('conceal')
        set conceallevel=2 concealcursor=niv
    endif
'''

[[plugins]]
repo = 'Shougo/neosnippet-snippets'

[[plugins]]
repo = 'Shougo/neomru.vim'

[[plugins]]
repo = 'Shougo/denite.nvim'
depends = ['neomru.vim']
hook_add = '''
    call denite#custom#option('default', 'prompt', '>>>')
    call denite#custom#option('default', 'statusline', v:false)
    if executable('fd')
        call denite#custom#var('file_rec', 'command', ['fd', '--type', 'file', '--hidden', '--ignore-file', expand('~/.ignore'), '.'])
        call denite#custom#var('directory_rec', 'command', ['fd', '--type', 'directory', '--hidden', '--no-ignore', '.'])
    endif
    if executable('rg')
        call denite#custom#var('grep', 'command', ['rg'])
        call denite#custom#var('grep', 'recursive_opts', [])
        call denite#custom#var('grep', 'final_opts', [])
        call denite#custom#var('grep', 'separator', ['--'])
        call denite#custom#var('grep', 'default_opts', ['--vimgrep', '--no-heading'])
    endif
    nnoremap <silent> <C-f>b :<C-u>Denite -winheight=15 buffer<CR>
    nnoremap <silent> <C-f>g :<C-u>Denite -winheight=15 grep<CR>
    nnoremap <silent> <C-f>r :<C-u>Denite -winheight=15 file_mru<CR>
    nnoremap <silent> <C-f>f :<C-u>Denite -winheight=15 file_rec<CR>
    nnoremap <silent> <C-f>d :<C-u>Denite -winheight=15 directory_rec<CR>
    nnoremap <silent> <C-f>o :<C-u>Denite -winheight=15 outline<CR>
    nnoremap <silent> <C-f>c :<C-u>Denite -winheight=15 colorsheme<CR>
    nnoremap <silent> <C-f><C-f> :<C-u>Denite -resume -mode=normal<CR>
    nnoremap <silent> <C-f>/ :<C-u>Denite -winheight=15 -auto-highlight line<CR>
    nnoremap <silent> <C-f>* :<C-u>DeniteCursorWord -winheight=15 -auto-highlight -mode=normal line<CR>
'''
# }}}

#############################
#   INPUT ENHANCED PLUGINS  #
#############################
# {{{
[[plugins]]
repo = 'thinca/vim-quickrun'
hook_add = '''
    set splitbelow
    let g:quickrun_config = {
    \   "_" : {
    \       "outputter/buffer/split" : ":botright 10",
    \       "runner" : "vimproc",
    \       "runner/vimproc/updatetime" : 40,
    \   }
    \}
'''

[[plugins]]
repo = 'wincent/vim-clipper'
hook_add = '''
    if $OS != "mac"
        let g:ClipperAuto = 0
    endif
'''

[[plugins]]
repo = 'christoomey/vim-tmux-navigator'
hook_add = '''
    " keymappig for terminal in vim
    if has('terminal')
        tmap <c-k> <c-w>:TmuxNavigateUp<cr>
        tmap <c-j> <c-w>:TmuxNavigateDown<cr>
        tmap <c-h> <c-w>:TmuxNavigateLeft<cr>
        tmap <c-l> <c-w>:TmuxNavigateRight<cr>
    endif
'''

[[plugins]]
repo = 'bronson/vim-trailing-whitespace'

[[plugins]]
repo = 'tomtom/tcomment_vim'

[[plugins]]
repo = 'ujihisa/neco-look'

[[plugins]]
repo = 'Shougo/neco-syntax'

[[plugins]]
repo = 'Townk/vim-autoclose'

[[plugins]]
repo = 'tpope/vim-surround'

[[plugins]]
repo = 'tpope/vim-repeat'

[[plugins]]
repo = 'ConradIrwin/vim-bracketed-paste'

[[plugins]]
repo = 'LeafCage/yankround.vim'
hook_add = '''
    nmap p <Plug>(yankround-p)
    nmap P <Plug>(yankround-P)
    nmap <C-p> <Plug>(yankround-prev)
    nmap <C-n> <Plug>(yankround-next)
'''

[[plugins]]
repo = 'junegunn/vim-easy-align'
hook_add = '''
    vmap <Enter> <Plug>(EasyAlign)
'''

[[plugins]]
repo = 'Konfekt/FastFold'
depends = 'SimplyFold'
hook_add = '''
    let g:fastfold_fold_command_suffixes = []
'''
# }}}

#############################
#       FILER PLUGINS       #
#############################
# {{{
[[plugins]]
repo = 'scrooloose/nerdtree'
hook_add = '''
    nmap <silent> <SPACE><SPACE> :NERDTreeToggle<CR>
    let g:NERDTreeShowHidden=1
'''
# }}}

#############################
#         COLORSCHEMS       #
#############################
# {{{
[[plugins]]
repo = 'nanotech/jellybeans.vim'
# }}}
